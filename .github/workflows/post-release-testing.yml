name: Post-Release Testing

on:
  workflow_dispatch:  # Allow manual triggering
  release:
    types: [published]  # Run automatically when a release is published

jobs:
  test-deb-package:
    name: Test Debian Package (Clang)
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Download release assets
        uses: actions/download-artifact@v3
        with:
          name: dist
          path: dist

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential cmake libboost-locale-dev libboost-regex-dev

      - name: Test Debian package using script
        run: |
          cd scripts
          # Make the test script executable
          chmod +x test-deb-package.sh
          # Run the test script in a Docker container
          sudo docker run --rm -v $(pwd):/mnt -v $(pwd)/../dist:/dist -w /mnt --privileged ubuntu:24.04 bash -c "apt-get update && apt-get install -y apt-utils && ./test-deb-package.sh"


      # Note: The test script already handles verification, building, and running a test program

      - name: Uninstall package
        run: |
          # Run in Docker to match the same environment where we installed
          sudo docker run --rm -v $(pwd):/mnt -v $(pwd)/../dist:/dist -w /mnt --privileged ubuntu:24.04 bash -c "dpkg -r sstring && echo 'Package removed successfully'"

  test-rpm-package:
    name: Test RPM Package (GCC)
    runs-on: ubuntu-latest
    needs: test-deb-package  # Run after Debian package test
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Download release assets
        uses: actions/download-artifact@v3
        with:
          name: dist
          path: dist

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y docker.io

      - name: Test RPM package using script
        run: |
          cd scripts
          # Make the test script executable
          chmod +x test-rpm-package.sh
          # Run the test script in a Fedora Docker container
          sudo docker run --rm -v $(pwd):/mnt -v $(pwd)/../dist:/dist -w /mnt --privileged fedora:latest bash -c "dnf install -y dnf-plugins-core && ./test-rpm-package.sh"

      - name: Uninstall package
        run: |
          # Run in Docker to match the same environment where we installed
          sudo docker run --rm -v $(pwd):/mnt -v $(pwd)/../dist:/dist -w /mnt --privileged fedora:latest bash -c "rpm -e sstring && echo 'Package removed successfully'"

